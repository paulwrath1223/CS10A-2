// Program write_to_file.cpp uses the << operator to write information to a file.
#include <iostream>
#include <fstream>               // Needed to use files
using namespace std;

int main()
{
	ofstream outputFile;
	outputFile.open("demofile.txt");

	cout << "Now writing information to the file.\n";
	// Write 3 great names to the file
	outputFile << "Bach\n";
	outputFile << "Beethoven\n";
	outputFile << "Mozart\n";

	// Close the file
	outputFile.close();
	cout << "Done.\n";
	return 0;
}
_________________________________________________
// Program read_from_file.cpp uses the >> operator to read information from a file.
#include <iostream>
#include <fstream>                 // Needed to use files
#include <string>                    
using namespace std;

int main()
{
	ifstream inFile;
	string name;

	inFile.open("demofile.txt");
	cout << "Reading information from the file.\n\n";
	
	inFile >> name;                // Read name 1 from the file
	cout << name << endl;          // Display name 1
	
	inFile >> name;                // Read name 2 from the file
	cout << name << endl;          // Display name 2
	
	inFile >> name;                // Read name 3 from the file
	cout << name << endl;          // Display name 3

	inFile.close();                // Close the file
	cout << "\nDone.\n";
	return 0;
}
_________________________________________________________________________
// Program read_close_file.cpp uses the >> operator to read rectangle dimensions
// from a file. It demonstrates that, as with cin, more than one
// value can be read in from a file with a single statement.
#include <iostream>
#include <fstream>
using namespace std;

int main()
{
	ifstream inFile;
	int length, width;

	inFile.open("dimensions.txt");
	cout << "Reading dimensions of 4 rectangles from the file.\n\n";

	// Process rectangle 1
	inFile >> length >> width;
	cout << "Area of rectangle 1: " << (length * width) << endl;

	// Process rectangle 2
	inFile >> length >> width;
	cout << "Area of rectangle 2: " << (length * width) << endl;

	// Process rectangle 3
	inFile >> length >> width;
	cout << "Area of rectangle 3: " << (length * width) << endl;

	// Process rectangle 4
	inFile >> length >> width;
	cout << "Area of rectangle 4: " << (length * width) << endl;

	// Close the file
	inFile.close();
	cout << "Done.\n";

	return 0;
}
