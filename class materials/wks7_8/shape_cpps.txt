#include<iostream> //square.cpp
using namespace std;

int main()
{
    int limit=5;
    char symbol='x';
    int colcount=1, rowcount=1;
    cout<<"Please enter a positive number to represent the side of a square."<<endl;
    cin>>limit;
    while(!cin || limit<0)
    {
        cin.clear();
        cin.ignore(100,'\n');
        cout<<"Please enter a positive number to represent the side of a square."<<endl;
    	cin>>limit;
    }

    while(rowcount<=limit)
    {
    	colcount=1;
    	while(colcount<=limit)
    	{
        	cout<<symbol;
        	colcount++;
    	}

    cout<<endl;
    rowcount++;
    }
    return 0;
}
__________________________________________________________________
#include<iostream> //triangle1.cpp
using namespace std;

int main()
{
    int limit=5;
    char symbol='x';
    int colcount=1, rowcount=1;
    cout<<"Please enter a positive number to be used to generate a triangle."<<endl;
    cin>>limit;
    while(!cin || limit<0)
    {
        cin.clear();
        cin.ignore(100,'\n');
        cout<<"Please enter a positive number to be used to generate a triangle."<<endl;
    	cin>>limit;
    }

    while(rowcount<=limit)
    {
    	colcount=1;
    	while(colcount<=rowcount)
    	{
        	cout<<symbol;
        	colcount++;
    	}

    cout<<endl;
    rowcount++;
    }
    return 0;
}
____________________________________________
#include<iostream> //triangle2.cpp
using namespace std;

int main()
{
    int limit=5;
    char symbol='x';
    int colcount=1, rowcount=1;
    cout<<"Please enter a positive number to be used to generate a triangle."<<endl;
    cin>>limit;
    while(!cin || limit<0)
    {
        cin.clear();
        cin.ignore(100,'\n');
        cout<<"Please enter a positive number to be used to generate a triangle."<<endl;
    	cin>>limit;
    }

    cout<<endl;
    while(rowcount<=limit)
    {
    	colcount=1;
    	while(colcount<=rowcount)
    	{
        	cout<<symbol;
        	colcount++;
    	}
    cout<<endl;
    rowcount++;
    }

    rowcount=1;
    while(rowcount<=limit)
    {
    	colcount=1;
    	int nlimit=limit-rowcount;
    	while(colcount<=nlimit)
    	{
        	cout<<symbol;
        	colcount++;
    	}
    cout<<endl;
    rowcount++;
    }

    return 0;
}
__________________________________________________
// Diamond Display: This program uses nested loops to display a diamond.
#include <iostream>
using namespace std;

int main()
{
	const int NUM_ROWS = 7,           // Number of rows
		      MAX_PLUS = 7;           // Maxiumum number of plus signs on a row

	int numSpaces,                    // Number of leading blank spaces on a row
		numPluses;                    // Number of plus signs on a row

	for (int row = 1; row <= NUM_ROWS; row++)
	{
		// Compute the number of pluses and number of leading spaces for this row
		numPluses = 2 * row - 1;      // This works for rows 1 thru 4

		if (numPluses > MAX_PLUS)     // This adjusts rows 5 thru 7
			numPluses = 14 - numPluses;

		numSpaces = (MAX_PLUS - numPluses) / 2;

		// Inner loop to print the leading spaces for this row
		for (int space = 1; space <= numSpaces; space++)
			cout << ' ';

		// Inner loop to print the pluses for this row
		for (int plus = 1; plus <= numPluses; plus++)
			cout << '+';

		// Go to the next row
		cout << endl;
	}
	return 0;
}
_____________________________________________________________________________
// Arrowhead Display: This program uses nested loops to display an arrowhead.
#include <iostream>
using namespace std;

int main()
{
	const int NUM_ROWS = 7,           // Number of rows
		      MAX_PLUS = 7;           // Maxiumum number of plus signs on a row

	int numPluses;                    // Number of plus signs on a row

	for (int row = 1; row <= NUM_ROWS; row++)
	{
		// Compute the number of pluses for this row
		numPluses = 2 * row - 1;      // This works for rows 1 thru 4

		if (numPluses > MAX_PLUS)     // This adjusts rows 5 thru 7
			numPluses = 14 - numPluses;

		// Print the arrow shaft or leading spaces
		if (row == (NUM_ROWS + 1) / 2)
			cout << "++++++";
		else
			cout << "      ";

		// Inner loop to print the pluses for this row
		for (int plus = 1; plus <= numPluses; plus++)
			cout << '+';

		// Go to the next row
		cout << endl;
	}
	return 0;
}
_____________________________________________________________________________
//shape start with sample slope
#include <iostream>
using namespace std;

int main()
{
  int width=12;
  int maxRows=width/2;
  int rowCount=0;
  int spaceCount=0;

  while(rowCount<=(width)/2)
  {
      spaceCount=rowCount;

      while(spaceCount<(width)/2)
      {
          cout<<" ";
          spaceCount++;
      }
      cout<<"*"<<endl;

      rowCount++;
  }
  return 0;
}
__________________________________________________________________________________